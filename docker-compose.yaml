services:
  postgresql:
    image: postgres
    volumes:
      - postgresql-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  django_gunicorn:
    build: ./
    volumes:
      - ./:/app
      - ./static:/app/static
      - ./media:/app/media
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    depends_on:
      postgresql:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    build: 
      context: ./nginx
    env_file:
      - ./.env
    volumes:
      - ./static:/static
      - ./media:/media
      - certbot-web:/vol/www
      - certbot-certs:/etc/letsencrypt
      - nginx-ssl-conf:/vol/nginx_ssl_conf
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    depends_on:
      - django_gunicorn
  certbot:
    build: ./certbot
    environment:
      EMAIL: ${SUPERUSER_EMAIL}
      DOMAIN: ${DOMAIN}
    volumes:
      - certbot-web:/vol/www
      - certbot-certs:/etc/letsencrypt/
    restart: unless-stopped
    depends_on:
      - nginx

volumes:
  postgresql-db:
  certbot-web:
  certbot-certs:
  nginx-ssl-conf:
